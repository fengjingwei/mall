<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hengxunda</groupId>
    <artifactId>mall</artifactId>
    <version>0.0.1-RELEASE</version>
    <packaging>pom</packaging>
    <name>Mall Spring Cloud</name>
    <description>Mall project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lombok.version>1.18.12</lombok.version>
        <mysql.version>8.0.28</mysql.version>
        <mybatis.version>2.1.3</mybatis.version>
        <jsqlparser.version>3.2</jsqlparser.version>
        <springfox.version>2.9.2</springfox.version>
        <spring.boot.version>2.3.4.RELEASE</spring.boot.version>
        <spring.cloud.version>Hoxton.SR8</spring.cloud.version>
        <swagger.bootstrap.ui.version>1.9.5</swagger.bootstrap.ui.version>
        <spring.cloud.hmily.version>2.0.6-RELEASE</spring.cloud.hmily.version>
        <spring.data.mongodb.version>2.3.4.RELEASE</spring.data.mongodb.version>
        <!--<spring.cloud.config.version>2.1.5.RELEASE</spring.cloud.config.version>-->
        <spring.cloud.zipkin.version>2.2.5.RELEASE</spring.cloud.zipkin.version>
        <spring.cloud.bus.amqp.version>2.2.3.RELEASE</spring.cloud.bus.amqp.version>
        <spring.cloud.openfeign.version>2.2.5.RELEASE</spring.cloud.openfeign.version>
        <!--<spring.cloud.eureka.client.version>2.1.4.RELEASE</spring.cloud.eureka.client.version>
        <spring.cloud.eureka.server.version>2.1.4.RELEASE</spring.cloud.eureka.server.version>-->
        <spring.cloud.hystrix.version>2.2.5.RELEASE</spring.cloud.hystrix.version>
        <spring.cloud.hystrix.dashboard.version>2.2.5.RELEASE</spring.cloud.hystrix.dashboard.version>
        <spring.cloud.alibaba.nacos.config.version>0.9.0.RELEASE</spring.cloud.alibaba.nacos.config.version>
        <spring.cloud.alibaba.nacos.discovery.version>0.9.0.RELEASE</spring.cloud.alibaba.nacos.discovery.version>
        <spring.cloud.alibaba.version>2.2.3.RELEASE</spring.cloud.alibaba.version>
        <io.opentelemetry.version>1.20.1</io.opentelemetry.version>
    </properties>

    <modules>
        <module>spring-cloud-account</module>
        <module>spring-cloud-common</module>
        <module>spring-cloud-config</module>
        <module>spring-cloud-eureka</module>
        <module>spring-cloud-gateway</module>
        <module>spring-cloud-inventory</module>
        <module>spring-cloud-nio</module>
        <module>spring-cloud-order</module>
        <module>spring-cloud-service</module>
        <module>spring-cloud-zipkin</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-account</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-config</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-eureka</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-gateway</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-inventory</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-nio</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-order</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hengxunda</groupId>
                <artifactId>spring-cloud-zipkin</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${spring.data.mongodb.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.dromara</groupId>
                <artifactId>hmily-spring-boot-starter-springcloud</artifactId>
                <version>${spring.cloud.hmily.version}</version>
            </dependency>

            <!--<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring.cloud.eureka.server.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${spring.cloud.eureka.client.version}</version>
            </dependency>-->

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bus-amqp</artifactId>
                <version>${spring.cloud.bus.amqp.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring.cloud.hystrix.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
                <version>${spring.cloud.hystrix.dashboard.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring.cloud.openfeign.version}</version>
            </dependency>

            <!--<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring.cloud.config.version}</version>
            </dependency>-->

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring.cloud.alibaba.nacos.config.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring.cloud.alibaba.nacos.discovery.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zipkin</artifactId>
                <version>${spring.cloud.zipkin.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.jsqlparser</groupId>
                <artifactId>jsqlparser</artifactId>
                <version>${jsqlparser.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger.bootstrap.ui.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <!--<dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${io.opentelemetry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <!--<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>-->

    <!--<repositories>
        <repository>
            <id>local-repos</id>
            <name>local Repository</name>
            &lt;!&ndash;https://repo.spring.io/libs-release&ndash;&gt;
            <url>http://127.0.0.1:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Popocloud Release Repository</name>
            <url>http://127.0.0.1:8081/nexus/content/repositories/releases/</url>
        </repository>

        <snapshotRepository>
            <id>snapshots</id>
            <name>Popocloud Snapshot Repository</name>
            <url>http://127.0.0.1:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>-->

</project>
