server:
  port: 9883
  address: 0.0.0.0
  servlet:
    context-path: /order-service

spring:
  shardingsphere:
    props:
      sql:
        show: true
      check:
        table:
          metadata:
            enabled: true
    datasource:
      names: master,slave
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/mall_order?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: 123456
      slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/mall_order?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: 123456
    #masterslave:
    #  load-balance-algorithm-type: round_robin
    #  name: dataSource
    #  master-data-source-name: master
    #  slave-data-source-names: slave
    sharding:
      master-slave-rules:
        ds0:
          master-data-source-name: master
          slave-data-source-names: slave
      tables:
        t_order:
          key-generator-column: id
          actual-data-nodes: ds0.t_order_${0..2}
          table-strategy:
            #inline:
            #  sharding-column: user_id
            #  algorithm-expression: t_order_${user_id % 3}
            standard:
              sharding-column: user_id
              precise-algorithm-class-name: com.hengxunda.springcloud.order.algorithm.MyPreciseUserIdModuloShardingTableAlgorithm
              range-algorithm-class-name: com.hengxunda.springcloud.order.algorithm.MyRangeUserIdModuloShardingTableAlgorithm
      #binding-tables: t_order

  #datasource:
  # driver-class-name: com.mysql.jdbc.Driver
  # url: jdbc:mysql://127.0.0.1:3306/mall_order?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false
  # username: root
  # password: 123456
  # dbcp2:
  #   initial-size: 20
  #   min-idle: 20
  #   max-wait-millis: 60000
  #   time-between-eviction-runs-millis: 60000
  #   min-evictable-idle-time-millis: 30000
  #   validation-query: select 'x'
  #   test-while-idle: true
  #   test-on-borrow: false
  #   test-on-return: false
  #   pool-prepared-statements: true
  application:
    name: order-service
  zipkin:
    base-url: http://127.0.0.1:9413

  rabbitmq:
    addresses: 127.0.0.1:5673
    username: admin
    password: admin
    virtual-host: /
    publisher-confirms: true
    publisher-returns: true

  cloud:
    bus:
      trace:
        enabled: true

  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: 123456
    jedis:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
    timeout: 60000ms

redisson:
  address: redis://${spring.redis.host}:${spring.redis.port}
  password: ${spring.redis.password}

mybatis:
  type-aliases-package: com.hengxunda.springcloud.order.entity
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mapper/*.xml

#eureka:
#  client:
#    service-url:
#      default-zone: http://127.0.0.1:8761/eureka/,http://127.0.0.1:8861/eureka/,http://127.0.0.1:8961/eureka/
#  instance:
#    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ip-address}:${server.port}

management:
  endpoint:
    bus-refresh:
      enabled: false

#启用feign的hystrix
feign:
  hystrix:
    enabled: true

#Hystrix超时时间改为5秒
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000
